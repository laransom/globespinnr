<!-- <div class='row'>
   <div class="small-6 large-centered columns text-center"><h1>Globespinnr</h1></div>
</div>

<div class='row'>
   <div class="small-6 large-centered columns text-center"><h3>Select a Country</h3></div>
</div>


  <div class='row'>
    <div class='small-12 large_centered columns'><%= select_tag :country, options_from_collection_for_select(@locations, 'id', 'name'), include_blank: true %></div>
  </div>
  <div class='row'>
    <div class='1-medium small-centered columns' id='submit'><a href='#' class='button'>Go</a></div>
  </div> -->



    <style>canvas { width: 100%; height: 100% }</style>

    <script>
      var scene = new THREE.Scene();
      var camera = new THREE.PerspectiveCamera(75, window.innerWidth/window.innerHeight, 0.1, 1000);

      var renderer = new THREE.WebGLRenderer();
      renderer.setSize(window.innerWidth, window.innerHeight);
      document.body.appendChild(renderer.domElement);

      camera.position.z = 1;

      scene.add(new THREE.AmbientLight(0xaaaaaa));

      var light = new THREE.DirectionalLight(0xffffff, 0.4);
      light.position.set(5,3,5);
      scene.add(light);


      var geometry   = new THREE.SphereGeometry(0.5, 32, 32);
      var material  = new THREE.MeshPhongMaterial();
        material.map = THREE.ImageUtils.loadTexture('/assets/earthmap1k.jpg');
        material.bumpMap = THREE.ImageUtils.loadTexture('/assets/earthbump1k.jpg');
        material.bumpScale = 0.05;
        material.specularMap = THREE.ImageUtils.loadTexture('/assets/earthspec1k.jpg');
        material.specular = new THREE.Color('grey');

      var earthMesh = new THREE.Mesh(geometry, material);
      scene.add(earthMesh);

      var trackballControls = new THREE.TrackballControls(camera, renderer.domElement );


      var geometry  = new THREE.SphereGeometry(90, 32, 32);
      var material  = new THREE.MeshBasicMaterial();
        material.map   = THREE.ImageUtils.loadTexture('/assets/starfield.png');
        material.side  = THREE.BackSide;
      var mesh  = new THREE.Mesh(geometry, material);
      scene.add(mesh);

      var render = function () {
        requestAnimationFrame(render);

        renderer.render(scene, camera);
        trackballControls.update();
      };

      render();
    </script>
