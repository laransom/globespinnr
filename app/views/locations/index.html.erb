    <style>canvas { width: 100%; height: 100% }</style>

    <script>
      var scene = new THREE.Scene();
      var camera = new THREE.PerspectiveCamera(75, window.innerWidth/window.innerHeight, 0.1, 1000);

      var renderer = new THREE.WebGLRenderer();
      renderer.setSize(window.innerWidth, window.innerHeight);
      document.body.appendChild(renderer.domElement);

      camera.position.z = 1;

      scene.add(new THREE.AmbientLight(0xaaaaaa));

      var light = new THREE.DirectionalLight(0xffffff, 0.4);
      light.position.set(5,3,5);
      scene.add(light);


      var geometry   = new THREE.SphereGeometry(0.5, 32, 32);
      var material  = new THREE.MeshPhongMaterial();
        material.map = THREE.ImageUtils.loadTexture("/images/earthmap1k.jpg");
        material.bumpMap = THREE.ImageUtils.loadTexture("/images/earthbump1k.jpg");
        material.bumpScale = 0.05;
        material.specularMap = THREE.ImageUtils.loadTexture("/images/earthspec1k.jpg");
        material.specular = new THREE.Color('grey');

      var earthMesh = new THREE.Mesh(geometry, material);
      scene.add(earthMesh);

      var trackballControls = new THREE.TrackballControls(camera, renderer.domElement );


      var geometry  = new THREE.SphereGeometry(90, 32, 32);
      var material  = new THREE.MeshBasicMaterial();
        material.map   = THREE.ImageUtils.loadTexture("/images/starfield.png");
        material.side  = THREE.BackSide;
      var mesh  = new THREE.Mesh(geometry, material);
      scene.add(mesh);

      var render = function () {
        requestAnimationFrame(render);

        earthMesh.rotation.y += 0.0004;

        renderer.render(scene, camera);
        trackballControls.update();
      };

      render();


      $('canvas').dblclick(function() {
        event.preventDefault();
        window.location.assign("/locations/" + <%= rand(1..252) %>);
      });

      var THREEx  = THREEx    || {};

      THREEx.WindowResize = function(renderer, camera){
        var callback  = function(){

          renderer.setSize( window.innerWidth, window.innerHeight );

          camera.aspect = window.innerWidth / window.innerHeight;
          camera.updateProjectionMatrix();
        };

        window.addEventListener('resize', callback, false);

        return {

          stop  : function(){
            window.removeEventListener('resize', callback);
          }
        };
      };

      THREEx.WindowResize(renderer, camera);

    </script>
